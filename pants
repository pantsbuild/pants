#!/usr/bin/env bash
# Copyright 2014 Pants project contributors (see CONTRIBUTORS.md).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

# This bootstrap script runs pants from the live sources in this repo.
#
# Further support is added for projects wrapping pants with custom external extensions.  In the
# future this will work differently (see: https://github.com/pantsbuild/pants/issues/5), but
# currently pants extenders can invoke this script exporting a few environment variables to include
# the extension source and requirements for development purposes:
# WRAPPER_SRCPATH       This is a colon separated list of paths containing extension sourcecode.
# WRAPPER_REQUIREMENTS  This is a colon separated list of pip install compatible requirements.txt
#                       files.
#
# For example, with a wrapping project layed out like so:
# /src/wrapper/
#   src/main/python/
#     wrapper/
#       ...
#   dependencies/python/
#     BUILD
#     requirements.txt
#
# And a pantsbuild/pants clone like so:
# /src/pantsbuild-pants
#
# You could invoke pants in the wrapper with its custom extension enabled using a script like so:
# /src/wrapper/pants
# ==
# #!/usr/bin/env bash
# WRAPPER_REQUIREMENTS="/src/wrapper/dependencies/python/requirements.txt" \
# WRAPPER_SRCPATH=/src/wrapper/src/main/python \
#    exec /src/pantsbuild-pants/pants "$@"
#

set -e

HERE=$(cd `dirname "${BASH_SOURCE[0]}"` && pwd)

# Exposes:
# + activate_pants_venv: Activate a virtualenv for pants requirements, creating it if needed.
source ${HERE}/build-support/pants_venv

# Exposes:
# + bootstrap_native_code: Builds target-specific native engine binaries.
source ${HERE}/build-support/bin/native/bootstrap_code.sh

PANTS_EXE="${HERE}/src/python/pants/bin/pants_loader.py"

if [[ ! -z "${WRAPPER_REQUIREMENTS}" ]]; then
  REQUIREMENTS=(
    $(echo ${WRAPPER_REQUIREMENTS} | tr : ' ')
    ${REQUIREMENTS[@]}
  )
fi

PANTS_SRCPATH=(
  ${HERE}/src/python
)
if [[ ! -z "${WRAPPER_SRCPATH}" ]]; then
  PANTS_SRCPATH=(
    $(echo ${WRAPPER_SRCPATH} | tr : ' ')
    ${PANTS_SRCPATH[@]}
  )
fi
PANTS_SRCPATH="$(echo ${PANTS_SRCPATH[@]} | tr ' ' :)"

function exec_pants_bare() {
  # Redirect activation and native bootstrap to ensure that they don't interfere with stdout.
  activate_pants_venv 1>&2
  bootstrap_native_code 1>&2
  PYTHONPATH="${PANTS_SRCPATH}:${PYTHONPATH}" \
    exec python ${PANTS_EXE} "$@"
}

if [[ ! -z "${WRAPPER_REQUIREMENTS}" ]]; then
  log "*** Running pants with extra requirements: ${WRAPPER_REQUIREMENTS} ***"
fi
if [[ ! -z "${WRAPPER_SRCPATH}" ]]; then
  log "*** Running pants with extra sources ${WRAPPER_SRCPATH} ***"
fi

# We're running against a Pants clone.
export PANTS_DEV=1

exec_pants_bare "$@"
