#!/usr/bin/env bash
# Copyright 2014 Pants project contributors (see CONTRIBUTORS.md).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

# This bootstrap script runs pants from the live sources in this repo.
#
# The script defaults to running with either Python 3.7 or Python 3.8. To use another Python version,
# prefix the script with `PY=python3.8`.

set -eo pipefail

HERE=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

# Set RUN_PANTS_FROM_PEX to non-empty to cause this wrapper script to delegate directly
# to ./pants.pex. We use this in CI to avoid bootstrapping in every shard.
if [[ -n "${RUN_PANTS_FROM_PEX}" ]]; then
  exec "${HERE}/pants.pex" "$@"
fi

# Otherwise, run directly from sources, bootstrapping if needed.

# Exposes:
# + determine_python: Determine which interpreter version to use.
# shellcheck source=build-support/common.sh
source "${HERE}/build-support/common.sh"

PY="$(determine_python)"
export PY

# Exposes:
# + activate_pants_venv: Activate a virtualenv for pants requirements, creating it if needed.
# shellcheck source=build-support/pants_venv
source "${HERE}/build-support/pants_venv"

# Exposes:
# + bootstrap_native_code: Builds target-specific native engine binaries.
# shellcheck source=build-support/bin/rust/bootstrap_code.sh
source "${HERE}/build-support/bin/rust/bootstrap_code.sh"


function exec_pants_bare() {

  PANTS_EXE="${HERE}/src/python/pants/bin/pants_loader.py"
  PANTS_SRCPATH="${HERE}/src/python"

  # Redirect activation and native bootstrap to ensure that they don't interfere with stdout.
  activate_pants_venv 1>&2
  bootstrap_native_code 1>&2

  # Because the venv has been activated, we simply say `python` and it will use the venv's version. We cannot use
  # `${PY}` because it could use the wrong interpreter if the value is an absolute path.
  PYTHONPATH="${PANTS_SRCPATH}:${PYTHONPATH}" RUNNING_PANTS_FROM_SOURCES=1 \
    exec python "${PANTS_EXE}" "$@"
}

exec_pants_bare "$@"
