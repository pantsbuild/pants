# GENERATED, DO NOT EDIT!
# To change, edit `src/python/pants_release/generate_github_workflows.py` and run:
#   ./pants run src/python/pants_release/generate_github_workflows.py


concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
env:
  PANTS_CONFIG_FILES: +['pants.ci.toml']
  RUST_BACKTRACE: all
jobs:
  check_labels:
    if: github.repository_owner == 'pantsbuild'
    name: Ensure PR has a category label
    runs-on:
    - ubuntu-20.04
    steps:
    - name: Announce to Slack
      uses: slackapi/slack-github-action@v1.23.0
      with:
        channel-id: C18RRR4JK
        payload: '{"blocks": [{"type": "section", "text": {"type": "mrkdwn", "text": "TEST, PLEASE IGNORE"}}]}'
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  classify_changes:
    if: github.repository_owner == 'pantsbuild'
    name: Classify changes
    outputs:
      ci_config: ${{ steps.classify.outputs.ci_config }}
      docs: ${{ steps.classify.outputs.docs }}
      docs_only: ${{ steps.classify.outputs.docs_only }}
      other: ${{ steps.classify.outputs.other }}
      release: ${{ steps.classify.outputs.release }}
      rust: ${{ steps.classify.outputs.rust }}
    runs-on:
    - ubuntu-20.04
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 10
    - id: classify
      name: Classify changed files
      run: "if [[ -z $GITHUB_EVENT_PULL_REQUEST_BASE_SHA ]]; then\n  # push: compare to the immediate parent, which should\
        \ already be fetched\n  # (checkout's fetch_depth defaults to 10)\n  comparison_sha=$(git rev-parse HEAD^)\nelse\n\
        \  # pull request: compare to the base branch, ensuring that commit exists\n  git fetch --depth=1 \"$GITHUB_EVENT_PULL_REQUEST_BASE_SHA\"\
        \n  comparison_sha=\"$GITHUB_EVENT_PULL_REQUEST_BASE_SHA\"\nfi\necho \"comparison_sha=$comparison_sha\"\n\naffected=$(git\
        \ diff --name-only \"$comparison_sha\" HEAD | python build-support/bin/classify_changed_files.py)\necho \"Affected:\"\
        \nif [[ \"${affected}\" == \"docs\" ]]; then\n  echo \"docs_only=true\" | tee -a $GITHUB_OUTPUT\nfi\nfor i in ${affected};\
        \ do\n  echo \"${i}=true\" | tee -a $GITHUB_OUTPUT\ndone\n"
  merge_ok:
    if: always()
    name: Merge OK
    needs:
    - set_merge_ok
    runs-on:
    - ubuntu-20.04
    steps:
    - run: "merge_ok=\"${{ needs.set_merge_ok.outputs.merge_ok }}\"\nif [[ \"${merge_ok}\" == \"true\" ]]; then\n    echo\
        \ \"Merge OK\"\n    exit 0\nelse\n    echo \"Merge NOT OK\"\n    exit 1\nfi\n"
  set_merge_ok:
    if: always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
    name: Set Merge OK
    needs:
    - classify_changes
    - check_labels
    - check_labels
    - classify_changes
    outputs:
      merge_ok: ${{ steps.set_merge_ok.outputs.merge_ok }}
    runs-on:
    - ubuntu-20.04
    steps:
    - id: set_merge_ok
      run: echo 'merge_ok=true' >> ${GITHUB_OUTPUT}
name: Pull Request CI
'on':
  pull_request: {}
  push:
    branches:
    - main
    - 2.*.x
