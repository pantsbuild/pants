# GENERATED, DO NOT EDIT!
# To change, edit `src/python/pants_release/generate_github_workflows.py` and run:
#   ./pants run src/python/pants_release/generate_github_workflows.py


concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
env:
  PANTS_CONFIG_FILES: +['pants.ci.toml']
  RUST_BACKTRACE: all
jobs:
  bootstrap_pants_linux_x86_64:
    env:
      PANTS_REMOTE_CACHE_READ: 'false'
      PANTS_REMOTE_CACHE_WRITE: 'false'
    if: (github.repository_owner == 'pantsbuild') && (needs.classify_changes.outputs.docs_only != 'true')
    name: Bootstrap Pants (Linux-x86_64)
    needs:
    - classify_changes
    runs-on:
    - ubuntu-20.04
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 10
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Cache Rust toolchain
      uses: actions/cache@v3
      with:
        key: Linux-x86_64-rustup-${{ hashFiles('rust-toolchain') }}-v2
        path: '~/.rustup/toolchains/1.70.0-*

          ~/.rustup/update-hashes

          ~/.rustup/settings.toml

          '
    - name: Cache Cargo
      uses: benjyw/rust-cache@461b9f8eee66b575bce78977bf649b8b7a8d53f1
      with:
        cache-bin: 'false'
        shared-key: engine
        workspaces: src/rust/engine
    - id: get-engine-hash
      name: Get native engine hash
      run: echo "hash=$(./build-support/bin/rust/print_engine_hash.sh)" >> $GITHUB_OUTPUT
      shell: bash
    - name: Cache native engine
      uses: actions/cache@v3
      with:
        key: Linux-x86_64-engine-${{ steps.get-engine-hash.outputs.hash }}-v1
        path: 'src/python/pants/bin/native_client

          src/python/pants/engine/internals/native_engine.so

          src/python/pants/engine/internals/native_engine.so.metadata'
    - name: Bootstrap Pants
      run: ./pants version > ${{ runner.temp }}/_pants_version.stdout && [[ -s ${{ runner.temp }}/_pants_version.stdout ]]
    - name: Run smoke tests
      run: './pants list ::

        ./pants roots

        ./pants help goals

        ./pants help targets

        ./pants help subsystems

        '
    - continue-on-error: true
      if: always()
      name: Upload pants.log
      uses: actions/upload-artifact@v3
      with:
        name: logs-bootstrap-Linux-x86_64
        path: .pants.d/*.log
    - name: Upload native binaries
      uses: actions/upload-artifact@v3
      with:
        name: native_binaries.${{ matrix.python-version }}.Linux-x86_64
        path: 'src/python/pants/bin/native_client

          src/python/pants/engine/internals/native_engine.so

          src/python/pants/engine/internals/native_engine.so.metadata'
    timeout-minutes: 60
  check_labels:
    if: github.repository_owner == 'pantsbuild'
    name: Ensure PR has a category label
    runs-on:
    - ubuntu-20.04
    steps:
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name == 'pull_request'
      name: Ensure category label
      uses: mheap/github-action-required-labels@v4.0.0
      with:
        count: 1
        labels: category:new feature, category:user api change, category:plugin api change, category:performance, category:bugfix,
          category:documentation, category:internal
        mode: exactly
  classify_changes:
    if: github.repository_owner == 'pantsbuild'
    name: Classify changes
    outputs:
      ci_config: ${{ steps.classify.outputs.ci_config }}
      docs: ${{ steps.classify.outputs.docs }}
      docs_only: ${{ steps.classify.outputs.docs_only }}
      other: ${{ steps.classify.outputs.other }}
      release: ${{ steps.classify.outputs.release }}
      rust: ${{ steps.classify.outputs.rust }}
    runs-on:
    - ubuntu-20.04
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 10
    - id: classify
      name: Classify changed files
      run: "if [[ -z $GITHUB_EVENT_PULL_REQUEST_BASE_SHA ]]; then\n  # push: compare to the immediate parent, which should\
        \ already be fetched\n  # (checkout's fetch_depth defaults to 10)\n  comparison_sha=$(git rev-parse HEAD^)\nelse\n\
        \  # pull request: compare to the base branch, ensuring that commit exists\n  git fetch --depth=1 \"$GITHUB_EVENT_PULL_REQUEST_BASE_SHA\"\
        \n  comparison_sha=\"$GITHUB_EVENT_PULL_REQUEST_BASE_SHA\"\nfi\necho \"comparison_sha=$comparison_sha\"\n\naffected=$(git\
        \ diff --name-only \"$comparison_sha\" HEAD | python build-support/bin/classify_changed_files.py)\necho \"Affected:\"\
        \nif [[ \"${affected}\" == \"docs\" ]]; then\n  echo \"docs_only=true\" | tee -a $GITHUB_OUTPUT\nfi\nfor i in ${affected};\
        \ do\n  echo \"${i}=true\" | tee -a $GITHUB_OUTPUT\ndone\n"
  lint_python:
    if: (github.repository_owner == 'pantsbuild') && (needs.classify_changes.outputs.docs_only != 'true')
    name: Lint Python and Shell
    needs:
    - bootstrap_pants_linux_x86_64
    - classify_changes
    runs-on:
    - ubuntu-20.04
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 10
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Download native binaries
      uses: actions/download-artifact@v3
      with:
        name: native_binaries.${{ matrix.python-version }}.Linux-x86_64
        path: src/python/pants
    - name: Make native-client runnable
      run: chmod +x src/python/pants/bin/native_client
    - name: Generate announcement
      run: './pants run src/python/pants_release/generate_release_announcement.py                             -- --channel=slack
        >> ${{ runner.temp }}/slack_announcement.json

        '
    - env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      name: Announce to Slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
        channel-id: C18RRR4JK
        payload-file-path: ${{ runner.temp }}/slack_announcement.json
    timeout-minutes: 30
  merge_ok:
    if: always()
    name: Merge OK
    needs:
    - set_merge_ok
    runs-on:
    - ubuntu-20.04
    steps:
    - run: "merge_ok=\"${{ needs.set_merge_ok.outputs.merge_ok }}\"\nif [[ \"${merge_ok}\" == \"true\" ]]; then\n    echo\
        \ \"Merge OK\"\n    exit 0\nelse\n    echo \"Merge NOT OK\"\n    exit 1\nfi\n"
  set_merge_ok:
    if: always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
    name: Set Merge OK
    needs:
    - classify_changes
    - check_labels
    - bootstrap_pants_linux_x86_64
    - check_labels
    - classify_changes
    - lint_python
    outputs:
      merge_ok: ${{ steps.set_merge_ok.outputs.merge_ok }}
    runs-on:
    - ubuntu-20.04
    steps:
    - id: set_merge_ok
      run: echo 'merge_ok=true' >> ${GITHUB_OUTPUT}
name: Pull Request CI
'on':
  pull_request: {}
  push:
    branches:
    - main
    - 2.*.x
