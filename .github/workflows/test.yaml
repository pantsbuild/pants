# GENERATED, DO NOT EDIT!
# To change, edit `build-support/bin/generate_github_workflows.py` and run:
#   ./pants run build-support/bin/generate_github_workflows.py


env:
  PANTS_CONFIG_FILES: +['pants.ci.toml']
  RUST_BACKTRACE: all
jobs:
  build_wheels_macos11_x86_64:
    env:
      PANTS_REMOTE_CACHE_READ: 'false'
      PANTS_REMOTE_CACHE_WRITE: 'false'
    if: needs.classify_changes.outputs.docs_only != 'true'
    name: Build wheels (macOS11-x86_64)
    needs: []
    runs-on:
    - macos-11
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 10
    - name: Expose Pythons
      uses: pantsbuild/actions/expose-pythons@627a8ce25d972afa03da1641be9261bbbe0e3ffe
    - name: Cache Rust toolchain
      uses: actions/cache@v3
      with:
        key: macOS11-x86_64-rustup-${{ hashFiles('rust-toolchain') }}-v2
        path: '~/.rustup/toolchains/1.66.1-*

          ~/.rustup/update-hashes

          ~/.rustup/settings.toml

          '
    - name: Cache Cargo
      uses: benjyw/rust-cache@461b9f8eee66b575bce78977bf649b8b7a8d53f1
      with:
        cache-bin: 'false'
        shared-key: engine
        workspaces: src/rust/engine
    - if: github.event_name != 'pull_request'
      name: Setup toolchain auth
      run: 'echo TOOLCHAIN_AUTH_TOKEN="${{ secrets.TOOLCHAIN_AUTH_TOKEN }}" >> $GITHUB_ENV

        '
    - name: Setup upterm session
      uses: lhotari/action-upterm@v1
    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.17.1
    - env:
        ARCHFLAGS: -arch x86_64
      name: Build wheels
      run: '[[ "${GITHUB_EVENT_NAME}" == "pull_request" ]] && export MODE=debug

        USE_PY39=true ./build-support/bin/release.sh build-local-pex


        ./build-support/bin/release.sh build-wheels

        USE_PY38=true ./build-support/bin/release.sh build-wheels

        USE_PY39=true ./build-support/bin/release.sh build-wheels'
    - continue-on-error: true
      if: always()
      name: Upload pants.log
      uses: actions/upload-artifact@v3
      with:
        name: pants-log-wheels-macOS11-x86_64
        path: .pants.d/pants.log
    - env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      if: github.event_name == 'push'
      name: Deploy to S3
      run: ./build-support/bin/deploy_to_s3.py
    timeout-minutes: 90
  classify_changes:
    if: github.repository_owner == 'pantsbuild'
    name: Classify changes
    outputs:
      ci_config: ${{ steps.classify.outputs.ci_config }}
      docs: ${{ steps.classify.outputs.docs }}
      docs_only: ${{ steps.classify.outputs.docs_only }}
      other: ${{ steps.classify.outputs.other }}
      release: ${{ steps.classify.outputs.release }}
      rust: ${{ steps.classify.outputs.rust }}
    runs-on:
    - ubuntu-20.04
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - id: files
      name: Get changed files
      uses: tj-actions/changed-files@v32
      with:
        separator: '|'
    - id: classify
      name: Classify changed files
      run: "affected=$(python build-support/bin/classify_changed_files.py \"${{ steps.files.outputs.all_modified_files\
        \ }}\")\necho \"Affected:\"\nif [[ \"${affected}\" == \"docs\" ]]; then\n\
        \  echo \"docs_only=true\" >> $GITHUB_OUTPUT\n  echo \"docs_only\"\nfi\nfor\
        \ i in ${affected}; do\n  echo \"${i}=true\" >> $GITHUB_OUTPUT\n  echo \"\
        ${i}\"\ndone\n"
name: Pull Request CI
'on':
  pull_request: {}
  push:
    branches-ignore:
    - dependabot/**
