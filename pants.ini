# All of the following are seeded with defaults in the config
#   user: the current user
#   homedir: the current user's home directory
#   buildroot: the root of this repo
#   pants_bootstrapdir: the global pants scratch space primarily used for caches
#   pants_supportdir: pants support files for this repo go here; for example: ivysettings.xml
#   pants_distdir: user visible artifacts for this repo go here
#   pants_workdir: the scratch space used to for live builds in this repo

[DEFAULT]
# TODO(John Sirois): Come up with a better public solution.
pants_support_baseurl: http://maven.twttr.com/twitter-commons/pants/build-support
pants_support_fetch_timeout_secs: 30

max_subprocess_args: 100

thrift_workdir: %(pants_workdir)s/thrift
scrooge_workdir: %(pants_workdir)s/scrooge
scrooge_legacy_workdir: %(pants_workdir)s/scrooge-legacy
protobuf_workdir: %(pants_workdir)s/protobuf
antlr_workdir: %(pants_workdir)s/antlr
antlr4_workdir: %(pants_workdir)s/antlr4

scala_workdir: %(pants_workdir)s/scalac

java_workdir: %(pants_workdir)s/javac

checkstyle_suppression_files = [
    '%(pants_supportdir)s/commons/checkstyle/checkstyle_suppressions.xml'
  ]

debug_port: 5005

outdir: %(pants_distdir)s

read_artifact_caches: []
write_artifact_caches: []

# Mixed into all cache keys. Bump this to invalidate all existing artifacts.
# Note: If you want to experiment with this locally without affecting artifacts
# read by all, change it to some other string, e.g., <number>-<your username>.
cache_key_gen_version: '100'

jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[goals]
bootstrap_buildfiles: [
    # This will pick up the whole top level BUILD file family, including BUILD.commons
    '%(buildroot)s/BUILD',
  ]


[tasks]
build_invalidator: %(pants_workdir)s/build_invalidator


[nailgun]
bootstrap-tools: [':nailgun-server']


[idl-extract]
workdir: %(pants_workdir)s/idl


[ivy]
ivy_settings: %(pants_supportdir)s/ivy/ivysettings.xml
cache_dir: %(homedir)s/.ivy2/twitter-commons


[ivy-resolve]
workdir: %(pants_workdir)s/classpath
bootstrap-tools: [':xalan']


[scrooge-gen]
bootstrap-tools: [':scrooge-gen']
workdir: %(scrooge_workdir)s
supportdir: %(pants_supportdir)s/bin/scrooge
strict: False
verbose: True
java: {
    'gen': 'java',
    'deps': {
      'service': [
                 '3rdparty:commons-lang',
                 '3rdparty:finagle-thrift',
                 '3rdparty:slf4j-api',
                 '3rdparty:util-core',
                 ],
      'structs': [
                 '3rdparty:commons-lang',
                 '3rdparty:thrift',
                 ]
    }
  }
scala: {
    'gen': 'scala',
    'deps': {
      'service': [
                 '3rdparty:scrooge-core',
                 '3rdparty:finagle-thrift',
                 '3rdparty:util-core',
                 ],
      'structs': [
                 '3rdparty:scrooge-core',
                 '3rdparty:thrift'
                 ]
    }
  }


[scrooge-legacy-gen]
bootstrap-tools: [':scrooge-legacy-gen']
workdir: %(scrooge_legacy_workdir)s
supportdir: %(pants_supportdir)s/bin/scrooge-legacy
strict: False
verbose: True
java: {
    'gen': 'java',
    'deps': {
      'service': [],
      'structs': []
    }
  }
scala: {
    'gen': 'scala',
    'deps': {
      'service': [],
      'structs': []
    }
  }


[thrift-gen]
workdir: %(thrift_workdir)s
supportdir: bin/thrift
strict: False
verbose: False
version: 0.5.0-finagle
java: {
    'gen': 'java:hashcode',
    'deps': {
      'service': ['3rdparty:thrift-0.5.0-finagle'],
      'structs': ['3rdparty:thrift-0.5.0']
    }
  }
python: {
    'gen': 'py:newstyle',
    'deps': {
      'service': ['3rdparty/python:thrift'],
      'structs': ['3rdparty/python:thrift']
    }
  }


[protobuf-gen]
workdir: %(protobuf_workdir)s
supportdir: bin/protobuf
version: 2.4.1
javadeps: ['3rdparty:protobuf-%(version)s']
pythondeps: []


[antlr-gen]
workdir: %(antlr_workdir)s
version: 3.4
javadeps: [':antlr-%(version)s']

[antlr4-gen]
workdir: %(antlr4_workdir)s
version: 4.0
javadeps: [':antlr4']


[checkstyle]
workdir: %(pants_workdir)s/checkstyle
bootstrap-tools: [':twitter-checkstyle']
configuration: %(pants_supportdir)s/checkstyle/coding_style.xml
properties: {
    'checkstyle.suppression.files': ','.join(%(checkstyle_suppression_files)s)
  }


[scalastyle]
config: %(buildroot)s/build-support/scalastyle/scalastyle_config.xml
# TODO(John Sirois): The excludes are currently global for all scala files but
# they should be trimmed back or eliminated when scalastyle is restricted to
# non code-gen targets:  https://jira.twitter.biz/browse/AWESOME-6870
excludes: %(buildroot)s/build-support/scalastyle/excludes.txt


[java-compile]
workdir: %(java_workdir)s

# jmake setup
#
jmake-bootstrap-tools: [':jmake']
default_to_flatten: True
partition_size_hint: 1000000000

jvm_args: ['-Xmx2G']

args: [
    '-C-encoding', '-CUTF-8',
    '-C-g',
    '-C-Tcolor',

    # Don't warn for thrift, scrooge, and protobuf gen-files
    '-C-Tnowarnprefixes', '-C%(thrift_workdir)s',
    '-C-Tnowarnprefixes', '-C%(scrooge_workdir)s',
    '-C-Tnowarnprefixes', '-C%(scrooge_legacy_workdir)s',
    '-C-Tnowarnprefixes', '-C%(protobuf_workdir)s',
    '-C-Tnowarnprefixes', '-C%(antlr_workdir)s',
    '-C-Tnowarnprefixes', '-C%(antlr4_workdir)s',

    # Suppress the warning for annotations with no processor - we know there are many of these!
    '-C-Tnowarnregex', '-C^(warning: )?No processor claimed any of these annotations: .*'
  ]
warning_args: [
    '-C-Xlint:all', '-C-Xlint:-serial', '-C-Xlint:-path',
    '-C-deprecation',
  ]
no_warning_args: [
    '-C-Xlint:none',
    '-C-nowarn',
  ]

# Extra args that will be -C mapped and passed through jmake to javac.
# These can be over-ridden (overwrites) via --compile-javac-args on the command line
javac_args: ['-source', '6', '-target', '6']

compiler-bootstrap-tools: [':java-compiler']


[scala-compile]
workdir: %(scala_workdir)s

compile-bootstrap-tools: [':scala-compile-2.9.3']
zinc-bootstrap-tools: [':zinc']

runtime-deps: ['3rdparty:scala-library']

default_to_flatten: True

args: [
    '-S-encoding', '-SUTF-8',
    '-S-g:vars',
  ]
warning_args: [
    '-S-deprecation',
    '-S-unchecked',
  ]
no_warning_args: [
    '-S-nowarn',
  ]

jvm_args: ['-Xmx2g', '-XX:MaxPermSize=256m', '-Dzinc.analysis.cache.limit=0']


[prepare-resources]
workdir: %(pants_workdir)s/resources


[jvm]
debug_args: ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=%(debug_port)s']

# TODO(John Sirois): Kill this when commons tests are converted to use explicit test target
# (default is False).
parallel_test_paths: True


[jvm-run]
jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[scala-repl]
bootstrap-tools: [':scala-repl-2.9.3']
jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m', '-Dscala.usejavacp=true' ]
main: scala.tools.nsc.MainGenericRunner


[junit-run]
workdir: %(pants_workdir)s/junit
junit-bootstrap-tools: [':junit']
emma-bootstrap-tools: [':emma']
jvm_args: [
    '-Djava.awt.headless=true', '-Xmx1g', '-XX:MaxPermSize=256m',

    # Needed for emma instrumenter to work against classfiles generated by java 7 compilers
    '-XX:-UseSplitVerifier'
  ]


[specs-run]
workdir: %(pants_workdir)s/specs
bootstrap-tools: [':scala-specs-2.9.3']
jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[benchmark-run]
bootstrap-tools: [':benchmark-caliper-0.5']
agent-bootstrap-tools: [':benchmark-java-allocation-instrumenter-2.1']
jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[jar-create]
workdir: %(pants_workdir)s/jars


[args-resource-mapper]
classdirs: [ '%(java_workdir)s/classes', '%(scala_workdir)s' ]


[ide]
workdir: %(pants_workdir)s/ide
python_source_paths: ['src/python']
python_test_paths: ['tests/python']
python_lib_paths: ['3rdparty/python']


[provides]
workdir: %(pants_workdir)s/provides


[idea]
scala_maximum_heap_size_mb: 1024
java_maximum_heap_size_mb: 1024


[python-repos]
repos: [
  'https://raw.github.com/twitter/commons/binaries/pants/third_party/python/dist/index.html',
  'https://raw.github.com/twitter/commons/binaries/pants/third_party/python/index.html']

indices: ['pypi.python.org']

allow_pypi: True


[python-ipython]
entry_point: IPython:start_ipython
requirements: ['ipython==1.0.0']

