# All of the following are seeded with defaults in the config
#   user: the current user
#   homedir: the current user's home directory
#   buildroot: the root of this repo
#   pants_bootstrapdir: the global pants scratch space primarily used for caches
#   pants_configdir: the global pants storage for config files
#   pants_supportdir: pants support files for this repo go here; for example: ivysettings.xml
#   pants_distdir: user visible artifacts for this repo go here
#   pants_workdir: the scratch space used to for live builds in this repo

[DEFAULT]
print_exception_stacktrace: True

# Enable our own custom loose-source plugins as well as contribs.
pythonpath: [
    "%(buildroot)s/contrib/cpp/src/python",
    "%(buildroot)s/contrib/go/src/python",
    "%(buildroot)s/contrib/node/src/python",
    "%(buildroot)s/contrib/scrooge/src/python",
    "%(buildroot)s/contrib/spindle/src/python",
    "%(buildroot)s/pants-plugins/src/python",
  ]

backend_packages: [
    "internal_backend.optional",
    "internal_backend.repositories",
    "internal_backend.sitegen",
    "internal_backend.utilities",
    "pants.backend.android",
    "pants.contrib.cpp",
    "pants.contrib.go",
    "pants.contrib.node",
    "pants.contrib.scrooge",
    "pants.contrib.spindle",
  ]

# TODO: Still needed until we migrate jvm tools to subsystems.
jvm_options: ["-Xmx1g", "-XX:MaxPermSize=256m"]

local_artifact_cache = %(pants_bootstrapdir)s/artifact_cache


[jvm]
options: ["-Xmx1g", "-XX:MaxPermSize=256m"]


[cache.bootstrap]
# The just-in-time tool shading performed by jvm tool bootstrapping is very expensive, so we turn
# on artifact caching for it that can survive clean-all.
read_from = ["%(local_artifact_cache)s"]
write_to = ["%(local_artifact_cache)s"]


[goals]
bootstrap_buildfiles: [
    "%(buildroot)s/BUILD",
    "%(buildroot)s/contrib/buildgen/BUILD",
    "%(buildroot)s/contrib/cpp/BUILD",
    "%(buildroot)s/contrib/go/BUILD",
    "%(buildroot)s/contrib/node/BUILD",
    "%(buildroot)s/contrib/scrooge/BUILD",
    "%(buildroot)s/contrib/spindle/BUILD",
    "%(buildroot)s/examples/BUILD",
    "%(buildroot)s/testprojects/BUILD",
  ]


[ivy]
# A custom ivysettings.xml file to allow for consumption from a local .m2 repository.
# If you don't need access to a local .m2 repository, remove this setting to use the default.
ivy_settings: %(pants_supportdir)s/ivy/ivysettings.xml
# We need a custom ivy profile to grab the optional pgp libs for
# signing artifacts we publish to maven central.
ivy_profile: %(pants_supportdir)s/ivy/ivy.xml


[gen.thrift]
gen_options: hashcode
deps: ["3rdparty:thrift"]


[compile.checkstyle]
bootstrap_tools: ["//:checkstyle"]
configuration: %(pants_supportdir)s/checkstyle/coding_style.xml


[compile.scalastyle]
config: %(buildroot)s/build-support/scalastyle/scalastyle_config.xml
excludes: %(buildroot)s/build-support/scalastyle/excludes.txt

[pycheck-class-factoring]
skip: True

[pycheck-pep8]
skip: True

[pycheck-import-order]
skip: True

[pycheck-newlines]
skip: False

[pycheck-variable-names]
skip: True

[pycheck-future-compat]
skip: True

[pycheck-trailing-whitespace]
skip: True

[pycheck-pyflakes]
skip: True

[pycheck-indentation]
skip: True

[pycheck-newstyle-classes]
skip: True

[pycheck-context-manager]
skip: True

[pycheck-except-statement]
skip: True

[compile.java]
partition_size_hint: 1000000000
compiler-bootstrap-tools: ["//:java-compiler"]
jvm_options: ["-Xmx2G"]


[compile.zinc]
jvm_options: ["-Xmx2g", "-XX:MaxPermSize=256m", "-Dzinc.analysis.cache.limit=0"]


[jvm.run.jvm]
options: ["-Xmx1g", "-XX:MaxPermSize=256m"]


[jvm.test.junit]
# -XX:-UseSplitVerifier is needed for emma instrumenter to work against classfiles generated by
# java 7 compilers
options: [
    "-Djava.awt.headless=true", "-Xmx1g", "-XX:MaxPermSize=256m",
    "-XX:-UseSplitVerifier"
  ]


[jvm.bench]
options: ["-Xmx1g", "-XX:MaxPermSize=256m"]

# TODO(gmalmquist): Find a way to resolve the -Xbootclasspath automatically, either by putting
# rt.jars up on the nexus or using some kind of special variable name (see discussion on RB 2494).
[jvm-platform]
default_platform: java6
platforms: {
    'java6': {'source': '6', 'target': '6', 'args': [] },
    'java7': {'source': '7', 'target': '7', 'args': [] },
    'java8': {'source': '8', 'target': '8', 'args': [] },
  }

[idea]
python_source_paths: ["src/python"]
python_test_paths: ["tests/python"]
python_lib_paths: ["3rdparty/python"]
scala_maximum_heap_size_mb: 1024
java_maximum_heap_size_mb: 1024


[publish.jar]
ivy_settings: %(pants_supportdir)s/ivy/publish.ivysettings.xml
push_postscript:
  # Prevent Travis-CI from running for this automated jar publish commit:
  #   http://docs.travis-ci.com/user/how-to-skip-a-build/
  [ci skip]
repos: {
    'public': {  # must match the name of the `Repository` object that you defined in your plugin.
      'resolver': 'oss.sonatype.org', # must match hostname in ~/.netrc and the <url> parameter
                                      # in your custom ivysettings.xml.
      # NB: default, sources, and javadoc are added automatically - they are listed here for sanity
      # sake but only 'changelog' is needed.  Fixing confs configuration to be needed or trimmed is
      # tracked here: https://github.com/pantsbuild/pants/issues/1410
      'confs': ['default', 'sources', 'javadoc', 'changelog'],
      'auth': 'build-support/ivy:netrc',  # Pants spec to a 'credentials()' object.
      'help': 'Configure your ~/.netrc for oss.sonatype.org access.'
    }
  }
restrict_push_branches: ['master']
restrict_push_urls: [
    'git@github.com:pantsbuild/pants.git',
    'https://github.com/pantsbuild/pants.git'
  ]


[python-setup]
# We only support pants running under 2.7 for now with 3.3+ support to be added later.
# Any example or test targets that are meant to test interpreters outside pants own
# acceptable set should specify an explicit compatibility constraint.
interpreter_requirement: CPython>=2.7,<3
interpreter_cache_dir: %(pants_bootstrapdir)s/python_cache/interpreters
resolver_cache_dir: %(pants_bootstrapdir)s/python_cache/requirements


[sign]
# Default to debug keystore installed with SDK.
# You can change this to point to a config.ini holding the definition of your keys.
keystore_config_location: %(pants_configdir)s/android/keystore/default_config.ini
