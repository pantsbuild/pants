# All of the following are seeded with defaults in the config
#   user: the current user
#   homedir: the current user's home directory
#   buildroot: the root of this repo
#   pants_bootstrapdir: the global pants scratch space primarily used for caches
#   pants_supportdir: pants support files for this repo go here; for example: ivysettings.xml
#   pants_distdir: user visible artifacts for this repo go here
#   pants_workdir: the scratch space used to for live builds in this repo

[DEFAULT]
# TODO(John Sirois): Come up with a better public solution.
pants_support_baseurls = [
    'https://pantsbuild.github.io/binaries/build-support',
  ]

checkstyle_suppression_files = [
    '%(pants_supportdir)s/commons/checkstyle/checkstyle_suppressions.xml'
  ]

outdir: %(pants_distdir)s

jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[goals]
bootstrap_buildfiles: [
    # This will pick up the whole top level BUILD file family, including BUILD.commons
    '%(buildroot)s/BUILD',
  ]

[ivy]
ivy_settings: %(pants_supportdir)s/ivy/ivysettings.xml


[scrooge-gen]
bootstrap-tools: ['//:scrooge-gen']
supportdir: %(pants_supportdir)s/bin/scrooge
strict: False
verbose: True
java: {
    'gen': 'java',
    'deps': {
      'service': [
                 '3rdparty:commons-lang',
                 '3rdparty:finagle-thrift',
                 '3rdparty:slf4j-api',
                 '3rdparty:util-core',
                 ],
      'structs': [
                 '3rdparty:commons-lang',
                 '3rdparty:thrift',
                 ]
    }
  }
scala: {
    'gen': 'scala',
    'deps': {
      'service': [
                 '3rdparty:scrooge-core',
                 '3rdparty:finagle-thrift',
                 '3rdparty:util-core',
                 ],
      'structs': [
                 '3rdparty:scrooge-core',
                 '3rdparty:thrift'
                 ]
    }
  }


[thrift-gen]
supportdir: bin/thrift
strict: False
verbose: False
version: 0.5.0-finagle
java: {
    'gen': 'java:hashcode',
    'deps': {
      'service': ['3rdparty:thrift-0.5.0-finagle'],
      'structs': ['3rdparty:thrift-0.5.0']
    }
  }
python: {
    'gen': 'py:newstyle',
    'deps': {
      'service': ['3rdparty/python:thrift'],
      'structs': ['3rdparty/python:thrift']
    }
  }


[antlr-gen]
version: 3.4
javadeps: ['//:antlr-%(version)s']

[antlr4-gen]
version: 4.0
javadeps: ['//:antlr-4']


[ragel-gen]
supportdir: bin/ragel
version: 6.8


[checkstyle]
bootstrap-tools: ['//:twitter-checkstyle']
configuration: %(pants_supportdir)s/checkstyle/coding_style.xml
properties: {
    'checkstyle.suppression.files': ','.join(%(checkstyle_suppression_files)s)
  }


[scalastyle]
config: %(buildroot)s/build-support/scalastyle/scalastyle_config.xml
# TODO(John Sirois): The excludes are currently global for all scala files but
# they should be trimmed back or eliminated when scalastyle is restricted to
# non code-gen targets:  https://jira.twitter.biz/browse/AWESOME-6870
excludes: %(buildroot)s/build-support/scalastyle/excludes.txt


[java-compile]
jmake-bootstrap-tools: ['//:jmake']
partition_size_hint: 1000000000

jvm_args: ['-Xmx2G']


# Extra args that will be -C mapped and passed through jmake to javac.
# These can be over-ridden (overwrites) via --compile-java-args on the command line
javac_args: ['-source', '6', '-target', '6']

compiler-bootstrap-tools: ['//:java-compiler']


[scala-compile]
compile-bootstrap-tools: ['//:scala-compiler-2.9.3']
zinc-bootstrap-tools: ['//:zinc']

runtime-deps: ['//:scala-library-2.9.3']


jvm_args: ['-Xmx2g', '-XX:MaxPermSize=256m', '-Dzinc.analysis.cache.limit=0']


[jvm]
debug_args: ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=%(debug_port)s']

# TODO(John Sirois): Kill this when commons tests are converted to use explicit test target
# (default is False).
parallel_test_paths: True


[jvm-run]
jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[scala-repl]
bootstrap-tools: ['//:scala-repl-2.9.3']
jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m', '-Dscala.usejavacp=true' ]
main: scala.tools.nsc.MainGenericRunner


[junit-run]
junit-bootstrap-tools: ['//:junit']
emma-bootstrap-tools: ['//:emma']
cobertura-bootstrap-tools: ['//:cobertura']
jvm_args: [
    '-Djava.awt.headless=true', '-Xmx1g', '-XX:MaxPermSize=256m',

    # Needed for emma instrumenter to work against classfiles generated by java 7 compilers
    '-XX:-UseSplitVerifier'
  ]


[specs-run]
bootstrap-tools: ['//:scala-specs-2.9.3']
jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[benchmark-run]
bootstrap-tools: ['//:benchmark-caliper-0.5']
agent-bootstrap-tools: ['//:benchmark-java-allocation-instrumenter-2.1']
jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[ide]
python_source_paths: ['src/python']
python_test_paths: ['tests/python']
python_lib_paths: ['3rdparty/python']


[idea]
scala_maximum_heap_size_mb: 1024
java_maximum_heap_size_mb: 1024


[python-repos]
repos: [
  'https://pantsbuild.github.io/cheeseshop/third_party/python/dist/index.html',
  'https://pantsbuild.github.io/cheeseshop/third_party/python/index.html']

indices: ['https://pypi.python.org/simple/']


[python-ipython]
entry_point: IPython:start_ipython
requirements: ['ipython==1.0.0']
