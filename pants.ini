# All of the following are seeded with defaults in the config
#   user: the current user
#   homedir: the current user's home directory
#   buildroot: the root of this repo
#   pants_bootstrapdir: the global pants scratch space primarily used for caches
#   pants_configdir: the global pants storage for config files
#   pants_supportdir: pants support files for this repo go here; for example: ivysettings.xml
#   pants_distdir: user visible artifacts for this repo go here
#   pants_workdir: the scratch space used to for live builds in this repo


# [DEFAULT] should only contain variables to be used later in this config or
# options not in global scope but available in certain subsystems or tasks.
[DEFAULT]
# TODO: Still needed until we migrate jvm tools to subsystems.
jvm_options: ["-Xmx1g", "-XX:MaxPermSize=256m"]

local_artifact_cache: %(pants_bootstrapdir)s/artifact_cache


# [GLOBAL] should only contain valid options in global scope.
[GLOBAL]
print_exception_stacktrace: True

# Enable our own custom loose-source plugins as well as contribs.
pythonpath: [
    "%(buildroot)s/contrib/android/src/python",
    "%(buildroot)s/contrib/avro/src/python",
    "%(buildroot)s/contrib/buildrefactor/src/python",
    "%(buildroot)s/contrib/codeanalysis/src/python",
    "%(buildroot)s/contrib/cpp/src/python",
    "%(buildroot)s/contrib/confluence/src/python",
    "%(buildroot)s/contrib/errorprone/src/python",
    "%(buildroot)s/contrib/findbugs/src/python",
    "%(buildroot)s/contrib/go/src/python",
    "%(buildroot)s/contrib/jax_ws/src/python",
    "%(buildroot)s/contrib/mypy/src/python",
    "%(buildroot)s/contrib/node/src/python",
    "%(buildroot)s/contrib/python/src/python",
    "%(buildroot)s/contrib/scalajs/src/python",
    "%(buildroot)s/contrib/scrooge/src/python",
    "%(buildroot)s/pants-plugins/src/python",
  ]

backend_packages: +[
    "pants.backend.docgen",
    "internal_backend.repositories",
    "internal_backend.sitegen",
    "internal_backend.utilities",
    "pants.contrib.android",
    "pants.contrib.avro",
    "pants.contrib.buildrefactor",
    "pants.contrib.codeanalysis",
    "pants.contrib.cpp",
    "pants.contrib.confluence",
    "pants.contrib.errorprone",
    "pants.contrib.findbugs",
    "pants.contrib.go",
    "pants.contrib.jax_ws",
    "pants.contrib.scalajs",
    "pants.contrib.mypy",
    "pants.contrib.node",
    "pants.contrib.python.checks",
    "pants.contrib.scrooge",
  ]

# Path patterns to ignore for filesystem operations on top of the builtin patterns.
pants_ignore: +[
    # venv directories under build-support.
    '/build-support/*.venv/',
  ]


[cache]
# Caching is on globally by default, but we disable it here for development purposes.
# It is explicitly re-enabled below for [cache.bootstrap] only.
read_from: []
write_to: []


[cache.bootstrap]
# The just-in-time tool shading performed by jvm tool bootstrapping is very expensive, so we turn
# on artifact caching for it that can survive clean-all.
read_from: ["%(local_artifact_cache)s"]
write_to: ["%(local_artifact_cache)s"]


[ivy]
# A custom ivysettings.xml file to allow for consumption from a local .m2 repository.
# If you don't need access to a local .m2 repository, remove this setting to use the default.
ivy_settings: %(pants_supportdir)s/ivy/ivysettings.xml
# We need a custom ivy profile to grab the optional pgp libs for
# signing artifacts we publish to maven central.
ivy_profile: %(pants_supportdir)s/ivy/ivy.xml


[gen.scrooge]
service_deps: {
    'java': [
      '3rdparty:slf4j-api',
      '3rdparty:thrift-0.6.1',
      '3rdparty/jvm/com/twitter:finagle-thrift',
      '3rdparty/jvm/com/twitter:scrooge-core',
    ],
    'scala': [
      '3rdparty:thrift-0.6.1',
      '3rdparty/jvm/com/twitter:finagle-thrift',
      '3rdparty/jvm/com/twitter:scrooge-core',
    ],
  }
structs_deps: {
    'java': [
      '3rdparty:thrift-0.6.1',
      '3rdparty/jvm/com/twitter:scrooge-core',
    ],
    'scala': [
      '3rdparty:thrift-0.6.1',
      '3rdparty/jvm/com/twitter:scrooge-core',
    ],
  }


[gen.thrift-java]
gen_options_map: {'hashcode': ''}
deps: ["3rdparty:thrift-0.9.2"]


[gen.thrift-py]
deps: ["3rdparty/python:thrift"]


[gen.antlr-py]
antlr3_deps: ["3rdparty/python:antlr-3.1.3"]


[compile.errorprone]
exclude_patterns: [
    'contrib/errorprone/tests/java/org/pantsbuild/contrib/errorprone:error',
    'testprojects/src/java/org/pantsbuild/testproject/.*'
  ]

[compile.findbugs]
max_rank: 4
fail_on_error: True
exclude_patterns: [
    'contrib/findbugs/tests/java/org/pantsbuild/contrib/findbugs:high',
    'testprojects/src/java/org/pantsbuild/testproject/.*'
  ]

[compile.zinc]
jvm_options: [
    '-Xmx4g', '-XX:MaxPermSize=512m', '-XX:+UseConcMarkSweepGC', '-XX:ParallelGCThreads=4',
    # bigger cache size for our big projects (default is just 5)
    '-Dzinc.analysis.cache.limit=1000',
  ]

args: [
    # NB: See https://github.com/pantsbuild/pants/issues/3702
    '-C-encoding', '-CUTF-8',
    '-S-encoding', '-SUTF-8',
    '-S-g:vars',
  ]
warning_args: [
    '-S-deprecation',
    '-S-unchecked',
    # request warnings for http://www.scala-lang.org/api/2.10.4/index.html#scala.language$
    '-S-feature',
  ]
no_warning_args: [
    '-S-nowarn',
  ]

[lint.checkstyle]
configuration: %(pants_supportdir)s/checkstyle/coding_style.xml

[lint.javascriptstyle]
javascriptstyle_dir: %(pants_supportdir)s/javascriptstyle

[fmt.javascriptstyle]
javascriptstyle_dir: %(pants_supportdir)s/javascriptstyle

[lint.python-eval]
# After we fix the cycles from the engine refactor we should re-enable this.
# https://github.com/pantsbuild/pants/issues/4601
skip: True

[lint.scalafmt]
skip: True

[lint.scalafix]
skip: True

[lint.scalastyle]
config: %(buildroot)s/build-support/scalastyle/scalastyle_config.xml
excludes: %(buildroot)s/build-support/scalastyle/excludes.txt

[fmt.scalafmt]
skip: True

[fmt.scalafix]
skip: True

[pycheck-class-factoring]
skip: True

[pycheck-pep8]
skip: True

[pycheck-import-order]
skip: True

[pycheck-variable-names]
skip: True

[pycheck-trailing-whitespace]
skip: True

[pycheck-context-manager]
skip: True

[scala-platform]
version: 2.11


[java]
strict_deps: True

[jvm]
options: ["-Xmx1g", "-XX:MaxPermSize=256m"]

[jvm.bench]
options: ["-Xmx1g", "-XX:MaxPermSize=256m"]

[jvm.run.jvm]
options: ["-Xmx1g", "-XX:MaxPermSize=256m"]

[jvm.test.junit]
options: [
    "-Djava.awt.headless=true", "-Xmx1g", "-XX:MaxPermSize=256m",
  ]

# NB(gmalmquist): You can set the bootclasspath relative to the
# appropriate java home (inferred from the target level) by setting
# an arg like:
# "-C-Xbootclasspath:$JAVA_HOME/jre/lib/resources.jar:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/jre/lib/sunrsasign.jar:$JAVA_HOME/jre/lib/jsse.jar:$JAVA_HOME/jre/lib/jce.jar:$JAVA_HOME/jre/lib/charsets.jar:$JAVA_HOME/jre/lib/jfr.jar:$JAVA_HOME/jre/classes"
[jvm-platform]
default_platform: java8
platforms: {
    'java6': {'source': '6', 'target': '6', 'args': [] },
    'java7': {'source': '7', 'target': '7', 'args': [] },
    'java8': {'source': '8', 'target': '8', 'args': [] },
  }


[idea]
python_source_paths: ["src/python"]
python_test_paths: ["tests/python"]
python_lib_paths: ["3rdparty/python"]
scala_maximum_heap_size_mb: 1024
java_maximum_heap_size_mb: 1024


[pants-releases]
branch_notes: {
    'master': 'src/python/pants/notes/master.rst',
    '1.0.x': 'src/python/pants/notes/1.0.x.rst',
    '1.1.x': 'src/python/pants/notes/1.1.x.rst',
    '1.2.x': 'src/python/pants/notes/1.2.x.rst',
    '1.3.x': 'src/python/pants/notes/1.3.x.rst',
  }


[publish.jar]
ivy_settings: %(pants_supportdir)s/ivy/publish.ivysettings.xml
push_postscript:
  # Prevent Travis-CI from running for this automated jar publish commit:
  #   http://docs.travis-ci.com/user/how-to-skip-a-build/
  [ci skip]
repos: {
    'public': {  # must match the name of the `Repository` object that you defined in your plugin.
      'resolver': 'oss.sonatype.org', # must match hostname in ~/.netrc and the <url> parameter
                                      # in your custom ivysettings.xml.
      'auth': 'build-support/ivy:netrc',  # Pants spec to a 'credentials()' object.
      'help': 'Configure your ~/.netrc for oss.sonatype.org access.'
    }
  }
restrict_push_branches: ['master']
restrict_push_urls: [
    'git@github.com:pantsbuild/pants.git',
    'https://github.com/pantsbuild/pants.git'
  ]


[python-setup]
# We only support pants running under 2.7 for now with 3.3+ support to be added later.
# Any example or test targets that are meant to test interpreters outside pants own
# acceptable set should specify an explicit compatibility constraint.
interpreter_constraints: ["CPython>=2.7,<3"]
interpreter_cache_dir: %(pants_bootstrapdir)s/python_cache/interpreters
resolver_cache_dir: %(pants_bootstrapdir)s/python_cache/requirements


[sign]
# Default to debug keystore installed with SDK.
# You can change this to point to a config.ini holding the definition of your keys.
keystore_config_location: %(pants_configdir)s/android/keystore/default_config.ini


[test.pytest]
timeouts: true
timeout_default: 60


[test.junit]
chroot: true
timeouts: true
timeout_default: 60
legacy_report_layout: False


[buildgen.go]
materialize: True
remote: True
fail_floating: True

