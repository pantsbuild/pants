# All of the following are seeded with defaults in the config
#   user: the current user
#   homedir: the current user's home directory
#   buildroot: the root of this repo
#   pants_bootstrapdir: the global pants scratch space primarily used for caches
#   pants_supportdir: pants support files for this repo go here; for example: ivysettings.xml
#   pants_distdir: user visible artifacts for this repo go here
#   pants_workdir: the scratch space used to for live builds in this repo
#
# NOTE: Values of list and dict type must be valid JSON.

[DEFAULT]
pants_support_baseurls = [
    "https://dl.bintray.com/pantsbuild/bin/build-support"
  ]

outdir: %(pants_distdir)s

jvm_options: ["-Xmx1g", "-XX:MaxPermSize=256m"]


[goals]
# This will pick up the whole top level BUILD file family, including BUILD.commons
bootstrap_buildfiles: [
    "%(buildroot)s/BUILD"
  ]

[ivy]
ivy_settings: %(pants_supportdir)s/ivy/ivysettings.xml


[scrooge-gen]
supportdir: %(pants_supportdir)s/bin/scrooge
strict: False
verbose: True
java: {
    "gen": "java",
    "deps": {
      "service": [
                 "3rdparty:commons-lang",
                 "3rdparty:finagle-thrift",
                 "3rdparty:slf4j-api",
                 "3rdparty:util-core"
                 ],
      "structs": [
                 "3rdparty:commons-lang",
                 "3rdparty:thrift"
                 ]
    }
  }
scala: {
    "gen": "scala",
    "deps": {
      "service": [
                 "3rdparty:scrooge-core",
                 "3rdparty:finagle-thrift",
                 "3rdparty:util-core"
                 ],
      "structs": [
                 "3rdparty:scrooge-core",
                 "3rdparty:thrift"
                 ]
    }
  }


[thrift-gen]
supportdir: bin/thrift
strict: False
verbose: False
version: 0.5.0-finagle
java: {
    "gen": "java:hashcode",
    "deps": {
      "service": ["3rdparty:thrift-0.5.0-finagle"],
      "structs": ["3rdparty:thrift-0.5.0"]
    }
  }
python: {
    "gen": "py:new_style",
    "deps": {
      "service": ["3rdparty/python:thrift"],
      "structs": ["3rdparty/python:thrift"]
    }
  }


[ragel-gen]
supportdir: bin/ragel
version: 6.8


[compile.checkstyle]
bootstrap_tools: ["//:checkstyle"]
configuration: %(pants_supportdir)s/checkstyle/coding_style.xml


[scalastyle]
config: %(buildroot)s/build-support/scalastyle/scalastyle_config.xml
excludes: %(buildroot)s/build-support/scalastyle/excludes.txt


[repl.scala]
scala_repl: ["//:scala-repl"]
jvm_options: ["-Xmx1g", "-XX:MaxPermSize=256m", "-Dscala.usejavacp=true" ]


[compile.java]
partition_size_hint: 1000000000
jvm_options: ["-Xmx2G"]

source: 6
target: 6

compiler-bootstrap-tools: ["//:java-compiler"]


[compile.scala]
runtime-deps: ["//:scala-library"]
jvm_options: ["-Xmx2g", "-XX:MaxPermSize=256m", "-Dzinc.analysis.cache.limit=0"]


[jvm]
# TODO(John Sirois): Kill this when commons tests are converted to use explicit test target
# (default is False).
parallel_test_paths: True


[run.jvm]
jvm_options: ["-Xmx1g", "-XX:MaxPermSize=256m"]


[test.junit]
# -XX:-UseSplitVerifier is needed for emma instrumenter to work against classfiles generated by
# java 7 compilers
jvm_options: [
    "-Djava.awt.headless=true", "-Xmx1g", "-XX:MaxPermSize=256m",
    "-XX:-UseSplitVerifier"
  ]


[run.specs]
jvm_options: ["-Xmx1g", "-XX:MaxPermSize=256m"]


[bench]
jvm_options: ["-Xmx1g", "-XX:MaxPermSize=256m"]


[ide]
python_source_paths: ["src/python"]
python_test_paths: ["tests/python"]
python_lib_paths: ["3rdparty/python"]


[idea]
scala_maximum_heap_size_mb: 1024
java_maximum_heap_size_mb: 1024


[python-setup]
# We only support pants running under 2.7 for now with 3.3+ support to be added later.
# Any example or test targets that are meant to test interpreters outside pants own
# acceptable set should specify an explicit compatibility constraint.
interpreter_requirement: CPython>=2.7,<3


[python-repos]
repos: [
    "https://pantsbuild.github.io/cheeseshop/third_party/python/dist/index.html",
    "https://pantsbuild.github.io/cheeseshop/third_party/python/index.html"
  ]

indices: ["https://pypi.python.org/simple/"]


[python-ipython]
entry_point: IPython:start_ipython
requirements: ["ipython==1.0.0"]


[backends]
packages: [
    "internal_backend.optional",
    "internal_backend.repositories",
    "internal_backend.sitegen"
  ]
