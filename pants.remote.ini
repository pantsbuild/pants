# For goals that you'd like to remote, first install the Google cloud CLI and then log in to an
# an account authorized to run the Pants project (you may need to ask a Pants committer for
# to authorize your account). Then, point to this config file and provide the oauth token like this:
#
#  $ ./pants --pants-config-files=pants.remote.ini
#     --remote-oauth-bearer-token-path=<(gcloud auth application-default print-access-token | perl -p -e 'chomp if eof')
#     --no-v1 --v2 test tests/python/pants_test/util:strutil
#
# Remoting does not work for every goal, so you should not permanently point to this ini file, e.g.
# via an env var; only point to it when you want to remote a specific invocation.

[DEFAULT]
remote_execution: True
remote_execution_server: remotebuildexecution.googleapis.com
remote_store_server: remotebuildexecution.googleapis.com
# This file might not exist on your machine. If this default fails, run `find /usr -name '*.pem'`
# and override this value via the env var PANTS_REMOTE_CA_CERTS_PATH.
remote_ca_certs_path: /usr/local/etc/openssl/cert.pem
remote_instance_name: projects/pants-remoting-beta/instances/default_instance
remote_execution_extra_platform_properties: [
    # This allows network requests, e.g. to resolve dependencies with Pex.
    "dockerNetwork=standard",
    "container-image=docker://gcr.io/pants-remoting-beta/rbe-remote-execution@sha256:20046a8b909cbbd94f3ff33808ceeeaa489a05eea5d00ad57c378f81f21462fc",
  ]

# This should correspond to the number of workers running in Google RBE.
process_execution_remote_parallelism: 8

[python-setup]
interpreter_search_paths: [
     # We include the host PATH and PEXRC values so that speculation still works.
     '<PATH>',
     '<PEXRC>',
     # This is the $PATH of the docker container, obtained by locally running `$ docker run --tag
     # rbe-remote-execution sh -c 'echo $PATH'`.
     "/pyenv-docker-build/versions/3.7.3/bin:/pyenv-docker-build/versions/3.6.8/bin:/pyenv-docker-build/versions/2.7.15/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/go/bin",
  ]

[python-native-code]
ld_flags: []
cpp_flags: []
