#!/usr/bin/env bash

# Required on OS X.
export set ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future

function banner() {
  echo
  echo "[== $@ ==]"
  echo
}

function die() {
  if (( $# > 0 )); then
    echo -e "\n$@"
  fi
  exit 1
}

function usage() {
  echo "Runs commons tests for local or hosted CI."
  echo
  echo "Usage: $0 (-h|-bsdjp)"
  echo " -h           print out this help message"
  echo " -b           skip bootstraping pants from local sources"
  echo " -s           skip self-distribution tests"
  echo " -d           if running jvm tests, don't use nailgun daemons"
  echo " -j           skip jvm tests"
  echo " -p           skip python tests"

  if (( $# > 0 )); then
    die "$@"
  else
    exit 0
  fi
}

daemons="--ng-daemons"

while getopts "hbsdjp" opt; do
  case ${opt} in
    h) usage ;;
    b) skip_bootstrap="true" ;;
    s) skip_distribution="true" ;;
    d) daemons="--no-ng-daemons" ;;
    j) skip_java="true" ;;
    p) skip_python="true" ;;
    *) usage "Invalid option: -${OPTARG}" ;;
  esac
done

banner "CI BEGINS"

if [[ "${skip_bootstrap:-false}" == "false" ]]; then
  banner "Bootstrapping pants"
  (
    ./build-support/python/clean.sh && \
    PANTS_VERBOSE=1 PEX_VERBOSE=1 PYTHON_VERBOSE=1 ./pants;
    ./pants.pex goal goals
  ) || die "Failed to bootstrap pants."
fi

./pants.pex goal clean-all || die "Failed to clean-all."

# TODO(John sirois): Re-plumb build such that it grabs constraints from the built python_binary
# target(s).
INTERPRETER_CONSTRAINTS=(
  -i "CPython>=2.6,<3"
  -i "CPython>=3.3"
)

if [[ "${skip_distribution:-false}" == "false" ]]; then
  # TODO(John Sirois): Take this further and dogfood a bootstrap from the sdists generated by
  # setup_py
  banner "Running pants distribution tests"
  (
    ./pants.pex build ${INTERPRETER_CONSTRAINTS[@]} \
      src/python/pants:_pants_transitional_publishable_binary_ && \
    mv dist/_pants_transitional_publishable_binary_.pex dist/self.pex && \
    ./dist/self.pex build ${INTERPRETER_CONSTRAINTS[@]} \
      src/python/pants:_pants_transitional_publishable_binary_ && \
    ./dist/self.pex setup_py --recursive src/python/pants:pants-packaged
  ) || die "Failed to create pants distributions."
fi

if [[ "${skip_java:-false}" == "false" ]]; then
  banner "Running jvm tests"
  (
    ./pants.pex goal test {src,tests}/{java,scala}:: $daemons -x
  ) || die "Jvm test failure."
fi

if [[ "${skip_python:-false}" == "false" ]]; then
  banner "Running python tests"
  (
    PANTS_PYTHON_TEST_FAILSOFT=1 ./pants.pex build ${INTERPRETER_CONSTRAINTS[@]} \
      --timeout=5 tests/python/pants_test:all
  ) || die "Python test failure"
fi

banner "CI SUCCESS"
