{
  "scope_to_help_info": {
    "": {
      "advanced": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]log-show-rust-3rdparty",
          "config_key": "log_show_rust_3rdparty",
          "default": false,
          "deprecated_message": null,
          "deprecation_active": false,
          "display_args": [
            "--[no-]log-show-rust-3rdparty"
          ],
          "env_var": "PANTS_LOG_SHOW_RUST_3RDPARTY",
          "fromfile": false,
          "help": "Whether to show/hide logging done by 3rdparty Rust crates used by the Pants engine.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--log-show-rust-3rdparty",
            "--no-log-show-rust-3rdparty"
          ],
          "target_field_name": null,
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--log-show-rust-3rdparty",
            "--no-log-show-rust-3rdparty"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": false
              }
            ]
          }
        },
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--ignore-warnings=\"['<str>', '<str>', ...]\"",
          "config_key": "ignore_warnings",
          "default": [],
          "deprecated_message": null,
          "deprecation_active": false,
          "display_args": [
            "--ignore-warnings=\"['<str>', '<str>', ...]\""
          ],
          "env_var": "PANTS_IGNORE_WARNINGS",
          "fromfile": false,
          "help": "Ignore logs and warnings matching these strings.\n\nNormally, Pants will look for literal matches from the start of the log/warning message, but you can prefix the ignore with `$regex$` for Pants to instead treat your string as a regex pattern. For example:\n\n    ignore_warnings = [\n        \"DEPRECATED: option 'config' in scope 'flake8' will be removed\",\n        '$regex$:No files\\s*'\n    ]",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "--ignore-warnings"
          ],
          "target_field_name": null,
          "typ": "list",
          "unscoped_cmd_line_args": [
            "--ignore-warnings"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": "",
                "rank": "NONE",
                "value": []
              },
              {
                "details": "",
                "rank": "HARDCODED",
                "value": []
              }
            ]
          }
        }
      ],
      "basic": [
        {
          "choices": [
            "trace",
            "debug",
            "info",
            "warn",
            "error"
          ],
          "comma_separated_choices": "trace, debug, info, warn, error",
          "comma_separated_display_args": "-l=<LogLevel>, --level=<LogLevel>",
          "config_key": "level",
          "default": "info",
          "deprecated_message": null,
          "deprecation_active": false,
          "display_args": [
            "-l=<LogLevel>",
            "--level=<LogLevel>"
          ],
          "env_var": "PANTS_LEVEL",
          "fromfile": false,
          "help": "Set the logging level.",
          "removal_hint": null,
          "removal_version": null,
          "scoped_cmd_line_args": [
            "-l",
            "--level"
          ],
          "target_field_name": null,
          "typ": "LogLevel",
          "unscoped_cmd_line_args": [
            "-l",
            "--level"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": "info"
              }
            ]
          }
        }
      ],
      "deprecated": [
        {
          "choices": null,
          "comma_separated_choices": null,
          "comma_separated_display_args": "--[no-]process-cleanup",
          "config_key": "process_cleanup",
          "default": true,
          "deprecated_message": "Deprecated, is scheduled to be removed in version: 3.0.0.dev0.",
          "deprecation_active": true,
          "display_args": [
            "--[no-]process-cleanup"
          ],
          "env_var": "PANTS_PROCESS_CLEANUP",
          "fromfile": false,
          "help": "\nIf false, Pants will not clean up local directories used as chroots for running processes. Pants will log their location so that you can inspect the chroot, and run the `__run.sh` script to recreate the process using the same argv and environment variables used by Pants. This option is useful for debugging.",
          "removal_hint": "Use the `keep_sandboxes` option instead.",
          "removal_version": "3.0.0.dev0",
          "scoped_cmd_line_args": [
            "--process-cleanup",
            "--no-process-cleanup"
          ],
          "target_field_name": null,
          "typ": "bool",
          "unscoped_cmd_line_args": [
            "--process-cleanup",
            "--no-process-cleanup"
          ],
          "value_history": {
            "ranked_values": [
              {
                "details": null,
                "rank": "NONE",
                "value": null
              },
              {
                "details": null,
                "rank": "HARDCODED",
                "value": true
              }
            ]
          }
        }
      ],
      "deprecated_scope": null,
      "description": "Options to control the overall behavior of Pants.",
      "is_goal": false,
      "provider": "pants.core",
      "scope": ""
    }
  }
}
