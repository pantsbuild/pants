env:
  global:
    - PANTS_CONFIG_FILES="${TRAVIS_BUILD_DIR}/pants.travis-ci.ini"
    - PYTEST_PASSTHRU_ARGS="-v --duration=3"

before_cache:
  # Ensure permissions to do the below removals, which happen with or without caching enabled.
  - sudo chown -R travis:travis "${HOME}" "${TRAVIS_BUILD_DIR}"
  # Kill all python bytecode in our cached venvs.  Some files appear to
  # get bytecode compiled in non-yet-understood circumstances leading to
  # a full cache re-pack due to new bytecode files.
  - find build-support -name "*.py[co]" -delete
  # The `ivydata-*.properties` & root level `*.{properties,xml}` files'
  # effect on resolution time is in the noise, but they are
  # re-timestamped in internal comments and fields on each run and this
  # leads to travis-ci cache thrash.  Kill these files before the cache
  # check to avoid un-needed cache re-packing and re-upload (a ~100s
  # operation).
  - find ${HOME}/.ivy2/pants -type f -name "ivydata-*.properties" -delete
  - rm -f ${HOME}/.ivy2/pants/*.{css,properties,xml,xsl}
  # We have several tests that do local file:// url resolves for
  # com.example artifacts, these disrupt the cache but are fast since
  # they're resolved from local files when omitted from the cache.
  - rm -rf ${HOME}/.ivy2/pants/com.example
  # The stats cache contains timestamped reports unused by CI but that
  # thrash the cache.  Skip caching these.
  - rm -rf ${HOME}/.cache/pants/stats
  # While the bin directory and rust toolchains are relatively large, they're also very quick to
  # restore/install: prune them to keep the total cache size down.
  #   see https://docs.travis-ci.com/user/caching/#Things-not-to-cache
  # NB: We do _not_ prune the cargo cache, since that holds compiled tools and outputs, and
  # individually resolved artifacts.
  - rm -rf ${HOME}/.cache/pants/bin
  - rm -rf ${HOME}/.cache/pants/rust/rustup
  - rm -rf ${HOME}/.cache/pants/lmdb_store
  # Render a summary of what is left in the home directory, to assist with further pruning of
  # the cache.
  - du -d2 ${HOME} | sort -r -n

cache:
  directories:
    - ${HOME}/.cache/pants
    - ${HOME}/.ivy2/pants
    # TODO(John Sirois): Update this to ~/.npm/pants when pants starts
    # using its own isolated cache:
    #   https://github.com/pantsbuild/pants/issues/2485
    - ${HOME}/.npm
    - build-support/isort.venv
    - build-support/pants_dev_deps.venv

# NB: There is much repetition in include elements, but there is no known current way to factor
# this duplication up.
matrix:
  include:
    - os: osx
      # We request the oldest image we can (corresponding to OSX 10.10) for maximum compatibility.
      # See: https://docs.travis-ci.com/user/reference/osx/#OS-X-Version
      osx_image: xcode6.4
      language: generic
      env:
        - SHARD="OSX Native Engine Binary Builder"
        - PREPARE_DEPLOY=1
      script:
        - ./pants --version && ./build-support/bin/release.sh -n

deploy:
  # See: https://docs.travis-ci.com/user/deployment/s3/
  provider: s3
  access_key_id: AKIAIWOKBXVU3JLY6EGQ
  secret_access_key:
    secure: UBVbpdYJ81OsDGKlPRBw6FlPJGlxosnFQ4A1xBbU5GwEBfv90GoKc6J0UwF+I4CDwytj/BlAks1XbW0zYX0oeIlXDnl1Vfikm1k4hfIr6VCLHKppiU69FlEs+ph0Dktz8+aUWhrvJzICZs6Gu08kTBQ5++3ulDWDeTHqjr713YM=
  bucket: binaries.pantsbuild.org
  local_dir: dist/deploy
  # Otherwise travis will stash dist/deploy and the deploy will fail.
  skip_cleanup: true
  acl: public_read
  on:
    condition: $PREPARE_DEPLOY = 1
    # NB: We mainly want deploys for `master` commits; but we also need new binaries for stable
    # release branches; eg `1.3.x`
    all_branches: true
    repo: pantsbuild/pants

# We accept the default travis-ci email author+committer notification
# for now which is enabled even with no `notifications` config.
# notifications:
#   email: ...
