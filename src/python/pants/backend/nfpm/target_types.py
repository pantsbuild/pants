# Copyright 2023 Pants project contributors (see CONTRIBUTORS.md).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

from __future__ import annotations

from pants.backend.nfpm.fields.all import (
    NfpmDependencies,
    NfpmOutputPathField,
    NfpmPackageMtimeField,
)
from pants.backend.nfpm.fields.contents import (
    NfpmContentDirDstField,
    NfpmContentDirsField,
    NfpmContentDirsOverridesField,
    NfpmContentDstField,
    NfpmContentFileGroupField,
    NfpmContentFileModeField,
    NfpmContentFileMtimeField,
    NfpmContentFileOwnerField,
    NfpmContentFilesField,
    NfpmContentFileSourceField,
    NfpmContentFilesOverridesField,
    NfpmContentSrcField,
    NfpmContentSymlinkDstField,
    NfpmContentSymlinksField,
    NfpmContentSymlinksOverridesField,
    NfpmContentSymlinkSrcField,
    NfpmContentTypeField,
)
from pants.engine.target import (
    COMMON_TARGET_FIELDS,
    InvalidTargetException,
    Target,
    TargetGenerator,
)
from pants.util.strutil import help_text

# Fields required to satisfy NfpmPackageFieldSet on all NfpmPackageTarget subclasses.
COMMON_NFPM_PACKAGE_FIELDS = (
    *COMMON_TARGET_FIELDS,  # tags, description
    NfpmOutputPathField,
    NfpmPackageMtimeField,
    NfpmDependencies,
    # NfpmPackageNameField is in the packager-specific lists of fields so that it ends up
    # in field_set.required_fields even though it is also required by NfpmPackageFieldSet.
)


class NfpmPackageTarget(Target):
    pass


CONTENT_FILE_INFO_FIELDS = (
    NfpmContentFileOwnerField,
    NfpmContentFileGroupField,
    NfpmContentFileModeField,
    NfpmContentFileMtimeField,
)


class NfpmContentFile(Target):
    alias = "nfpm_content_file"
    core_fields = (
        *COMMON_TARGET_FIELDS,
        NfpmContentFileSourceField,
        NfpmDependencies,
        NfpmContentSrcField,
        NfpmContentDstField,
        NfpmContentTypeField,
        *CONTENT_FILE_INFO_FIELDS,
    )
    help = help_text(
        lambda: f"""
        A file (of any type) that should be copied into an nFPM package.

        The file comes from either the '{NfpmContentFileSourceField.alias}' field
        or from any of the targets listed in the '{NfpmDependencies.alias}' field.
        The file may be a workspace file, a generated file, or even a package.

        The '{NfpmContentSrcField}' field tells nFPM where the file is in the sandbox.
        The '{NfpmContentDstField}' field tells nFPM where the file should be installed
        by the nFPM-generated package.
        """
    )

    def validate(self) -> None:
        if self[NfpmContentFileSourceField].value is None and not (
            self[NfpmContentSrcField].value and self[NfpmDependencies].value
        ):
            raise InvalidTargetException(
                help_text(
                    f"""
                    The '{self.alias}' target {self.address} must either
                    define a source file in the '{NfpmContentFileSourceField.alias}' field
                    or specify a path in '{NfpmContentSrcField.alias}' that is provided
                    by one of the targets in the '{NfpmDependencies.alias}' field.
                    """
                )
            )


class NfpmContentFiles(TargetGenerator):
    alias = "nfpm_content_files"
    generated_target_cls = NfpmContentFile
    core_fields = (
        *COMMON_TARGET_FIELDS,
        NfpmContentFilesField,  # TODO: if given a "sources" field, what does this look like?
        NfpmContentFilesOverridesField,
    )
    copied_fields = COMMON_TARGET_FIELDS
    moved_fields = (
        NfpmDependencies,
        NfpmContentTypeField,
        *CONTENT_FILE_INFO_FIELDS,
    )
    help = help_text(
        f"""
        Multiple files that should be copied into an nFPM package.

        Pass the list of ('{NfpmContentSrcField.alias}', '{NfpmContentDstField.alias}')
        file tuples in the '{NfpmContentFilesField.alias}' field.
        The '{NfpmContentSrcField.alias}' files must be provided by or generated by
        the targets in '{NfpmDependencies.alias}'.
        """
    )


class NfpmContentSymlink(Target):
    alias = "nfpm_content_symlink"
    core_fields = (
        *COMMON_TARGET_FIELDS,
        # Modeled w/o dependencies for now (feel free to add later).
        NfpmContentSymlinkSrcField,  # path on package install target
        NfpmContentSymlinkDstField,  # path on package install target
        *CONTENT_FILE_INFO_FIELDS,
    )
    help = help_text(
        """
        A symlink in an nFPM package (created on package install).
        """
    )


class NfpmContentSymlinks(TargetGenerator):
    alias = "nfpm_content_symlinks"
    generated_target_cls = NfpmContentSymlink
    core_fields = (
        *COMMON_TARGET_FIELDS,
        # Modeled w/o dependencies for now (feel free to add later).
        NfpmContentSymlinksField,
        NfpmContentSymlinksOverridesField,
    )
    copied_fields = COMMON_TARGET_FIELDS
    moved_fields = CONTENT_FILE_INFO_FIELDS
    help = help_text(
        f"""
        Multiple symlinks in an nFPM package (created on package install).

        Pass the list of ('{NfpmContentSymlinkSrcField.alias}', '{NfpmContentSymlinkDstField.alias}')
        symlink tuples in the '{NfpmContentSymlinksField.alias}' field.

        Note that '{NfpmContentSymlinkSrcField.alias}' is commonly known as the
        symlink "target" and '{NfpmContentSymlinkDstField.alias}' is the path
        to the symlink itself, also known as the symlink "name".
        """
    )


class NfpmContentDir(Target):
    alias = "nfpm_content_dir"
    core_fields = (
        *COMMON_TARGET_FIELDS,
        # Modeled w/o dependencies for now (feel free to add later).
        NfpmContentDirDstField,  # path on package install target
        # nFPM also supports passing a real dir in "src", from which it
        # pulls the mode and mtime. But, pants creates the sandbox for nFPM,
        # so pants would have to explicitly set mode/mtime on sandboxed dirs.
        # So, the pants UX simplifies and only supports BUILD-defined values.
        *CONTENT_FILE_INFO_FIELDS,
    )
    help = help_text(
        """
        A directory in an nFPM package (created on package install).
        """
    )


class NfpmContentDirs(TargetGenerator):
    alias = "nfpm_content_dirs"
    generated_target_cls = NfpmContentDir
    core_fields = (
        *COMMON_TARGET_FIELDS,
        # Modeled w/o dependencies for now (feel free to add later).
        NfpmContentDirsField,
        NfpmContentDirsOverridesField,
    )
    copied_fields = COMMON_TARGET_FIELDS
    moved_fields = CONTENT_FILE_INFO_FIELDS
    help = help_text(
        """
        Multiple directories in an nFPM package (created on package install).
        """
    )


def target_types():
    return [
        NfpmContentFile,
        NfpmContentFiles,
        NfpmContentSymlink,
        NfpmContentSymlinks,
        NfpmContentDir,
        NfpmContentDirs,
    ]
