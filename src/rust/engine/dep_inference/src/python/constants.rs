// Copyright 2023 Pants project contributors (see CONTRIBUTORS.md).
// Licensed under the Apache License, Version 2.0 (see LICENSE).

// Generated by ...
#[non_exhaustive]
pub struct KindID;

impl KindID {
  pub const IDENTIFIER: u16 = 1;
  pub const ELLIPSIS: u16 = 83;
  pub const ESCAPE_SEQUENCE: u16 = 88;
  pub const TYPE_CONVERSION: u16 = 91;
  pub const INTEGER: u16 = 92;
  pub const FLOAT: u16 = 93;
  pub const TRUE: u16 = 95;
  pub const FALSE: u16 = 96;
  pub const NONE: u16 = 97;
  pub const COMMENT: u16 = 98;
  pub const MODULE: u16 = 105;
  pub const IMPORT_STATEMENT: u16 = 108;
  pub const IMPORT_PREFIX: u16 = 109;
  pub const RELATIVE_IMPORT: u16 = 110;
  pub const FUTURE_IMPORT_STATEMENT: u16 = 111;
  pub const IMPORT_FROM_STATEMENT: u16 = 112;
  pub const ALIASED_IMPORT: u16 = 114;
  pub const WILDCARD_IMPORT: u16 = 115;
  pub const PRINT_STATEMENT: u16 = 116;
  pub const CHEVRON: u16 = 117;
  pub const ASSERT_STATEMENT: u16 = 118;
  pub const EXPRESSION_STATEMENT: u16 = 119;
  pub const NAMED_EXPRESSION: u16 = 120;
  pub const RETURN_STATEMENT: u16 = 122;
  pub const DELETE_STATEMENT: u16 = 123;
  pub const RAISE_STATEMENT: u16 = 124;
  pub const PASS_STATEMENT: u16 = 125;
  pub const BREAK_STATEMENT: u16 = 126;
  pub const CONTINUE_STATEMENT: u16 = 127;
  pub const IF_STATEMENT: u16 = 128;
  pub const ELIF_CLAUSE: u16 = 129;
  pub const ELSE_CLAUSE: u16 = 130;
  pub const MATCH_STATEMENT: u16 = 131;
  pub const CASE_CLAUSE: u16 = 132;
  pub const FOR_STATEMENT: u16 = 133;
  pub const WHILE_STATEMENT: u16 = 134;
  pub const TRY_STATEMENT: u16 = 135;
  pub const EXCEPT_CLAUSE: u16 = 136;
  pub const FINALLY_CLAUSE: u16 = 137;
  pub const WITH_STATEMENT: u16 = 138;
  pub const WITH_CLAUSE: u16 = 139;
  pub const WITH_ITEM: u16 = 140;
  pub const FUNCTION_DEFINITION: u16 = 141;
  pub const PARAMETERS: u16 = 142;
  pub const LAMBDA_PARAMETERS: u16 = 143;
  pub const LIST_SPLAT: u16 = 144;
  pub const DICTIONARY_SPLAT: u16 = 145;
  pub const GLOBAL_STATEMENT: u16 = 146;
  pub const NONLOCAL_STATEMENT: u16 = 147;
  pub const EXEC_STATEMENT: u16 = 148;
  pub const CLASS_DEFINITION: u16 = 149;
  pub const PARENTHESIZED_LIST_SPLAT: u16 = 150;
  pub const ARGUMENT_LIST: u16 = 151;
  pub const DECORATED_DEFINITION: u16 = 152;
  pub const DECORATOR: u16 = 153;
  pub const BLOCK: u16 = 154;
  pub const EXPRESSION_LIST: u16 = 155;
  pub const DOTTED_NAME: u16 = 156;
  pub const TUPLE_PATTERN: u16 = 161;
  pub const LIST_PATTERN: u16 = 162;
  pub const DEFAULT_PARAMETER: u16 = 163;
  pub const TYPED_DEFAULT_PARAMETER: u16 = 164;
  pub const LIST_SPLAT_PATTERN: u16 = 165;
  pub const DICTIONARY_SPLAT_PATTERN: u16 = 166;
  pub const AS_PATTERN: u16 = 167;
  pub const NOT_OPERATOR: u16 = 171;
  pub const BOOLEAN_OPERATOR: u16 = 172;
  pub const BINARY_OPERATOR: u16 = 173;
  pub const UNARY_OPERATOR: u16 = 174;
  pub const COMPARISON_OPERATOR: u16 = 175;
  pub const LAMBDA: u16 = 176;
  pub const ASSIGNMENT: u16 = 178;
  pub const AUGMENTED_ASSIGNMENT: u16 = 179;
  pub const PATTERN_LIST: u16 = 180;
  pub const YIELD: u16 = 182;
  pub const ATTRIBUTE: u16 = 183;
  pub const SUBSCRIPT: u16 = 184;
  pub const SLICE: u16 = 185;
  pub const CALL: u16 = 186;
  pub const TYPED_PARAMETER: u16 = 187;
  pub const TYPE: u16 = 188;
  pub const KEYWORD_ARGUMENT: u16 = 189;
  pub const LIST: u16 = 190;
  pub const SET: u16 = 191;
  pub const TUPLE: u16 = 192;
  pub const DICTIONARY: u16 = 193;
  pub const PAIR: u16 = 194;
  pub const LIST_COMPREHENSION: u16 = 195;
  pub const DICTIONARY_COMPREHENSION: u16 = 196;
  pub const SET_COMPREHENSION: u16 = 197;
  pub const GENERATOR_EXPRESSION: u16 = 198;
  pub const PARENTHESIZED_EXPRESSION: u16 = 200;
  pub const FOR_IN_CLAUSE: u16 = 202;
  pub const IF_CLAUSE: u16 = 203;
  pub const CONDITIONAL_EXPRESSION: u16 = 204;
  pub const CONCATENATED_STRING: u16 = 205;
  pub const STRING: u16 = 206;
  pub const INTERPOLATION: u16 = 207;
  pub const FORMAT_SPECIFIER: u16 = 209;
  pub const FORMAT_EXPRESSION: u16 = 210;
  pub const AWAIT: u16 = 211;
  pub const POSITIONAL_SEPARATOR: u16 = 212;
  pub const KEYWORD_SEPARATOR: u16 = 213;
  pub const AS_PATTERN_TARGET: u16 = 241;
  pub const CASE_PATTERN: u16 = 242;
  pub const ERROR: u16 = 65535;
}
