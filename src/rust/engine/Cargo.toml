[package]
version = "0.0.1"
edition = "2018"
name = "engine"
authors = [ "Pants Build <pantsbuild@gmail.com>" ]
publish = false

[profile.release]
# Enable debug symbols in the `release` profile: doesn't add a noticeable overhead in size/speed,
# but enables profiling of optimized builds.
debug = true
# Optimise for the speed of our binary, rather than the speed of compilation.
codegen-units = 1

[workspace]
# These are the packages which are built/tested when the --all flag is passed to cargo.
#
# We need to explicitly list these, because otherwise the standalone tools
# (e.g. fs_util) won't be included when we build/test things.
members = [
  ".",
  "async_latch",
  "async_semaphore",
  "async_value",
  "concrete_time",
  "fs",
  "fs/brfs",
  "fs/fs_util",
  "fs/store",
  "graph",
  "hashing",
  "stdio",
  "logging",
  "nailgun",
  "process_execution",
  "process_executor",
  "rule_graph",
  "sharded_lmdb",
  "task_executor",
  "testutil",
  "testutil/mock",
  "testutil/local_cas",
  "testutil/local_execution_server",
  "tryfuture",
  "ui",
  "watch",
  "workunit_store"
]

# These are the packages which are built/tested when no special selector flags are passed to cargo.
#
# This is the set of packages which are expected to work on any arbitrary system that checks out the code.
# It should be exactly equivalent to members, except without any packages that require more system
# configuration than we're comfortable doing in our bootstrap scripts.
#
# In particular, it does not contain the fs/brfs package, which will not compile without a fuse installation.
# On Ubuntu, that means installing libfuse-dev. On OSX, that means installing OSXFUSE.
default-members = [
  ".",
  "async_latch",
  "async_semaphore",
  "async_value",
  "concrete_time",
  "fs",
  "fs/fs_util",
  "fs/store",
  "graph",
  "hashing",
  "stdio",
  "logging",
  "nailgun",
  "process_execution",
  "process_executor",
  "rule_graph",
  "sharded_lmdb",
  "task_executor",
  "testutil",
  "testutil/mock",
  "testutil/local_cas",
  "testutil/local_execution_server",
  "tryfuture",
  "ui",
  "watch",
  "workunit_store"
]

[lib]
crate-type = ["cdylib"]

[features]
# NB: To actually load this crate from python, the `extension-module` feature must be enabled. But
# unfortunately, enabling `extension-module` causes tests linked against `cpython` to fail. We
# define a feature to enable that, but we do not enable it by default: someone building this module
# in order to extract `libengine.so` should pass `cargo build .. --features=extension-module`.
#  see https://github.com/PyO3/pyo3/issues/340
extension-module = ["cpython/extension-module"]
default = []

[dependencies]
async_latch = { path = "async_latch" }
async_semaphore = { path = "async_semaphore" }
async-trait = "0.1"
bytes = "0.5"
concrete_time = { path = "concrete_time" }
cpython = "0.5"
crossbeam-channel = "0.4"
fnv = "1.0.5"
fs = { path = "fs" }
futures = "0.3"
futures-core = "^0.3.0"
graph = { path = "graph" }
hashing = { path = "hashing" }
indexmap = "1.4"
itertools = "0.8.2"
lazy_static = "1"
libc = "0.2.39"
log = "0.4"
logging = { path = "logging" }
nailgun = { path = "nailgun" }
num_enum = "0.4"
parking_lot = "0.11"
process_execution = { path = "process_execution" }
rand = "0.6"
regex = "1"
reqwest = { version = "0.10", default_features = false, features = ["stream", "rustls-tls"] }
rule_graph = { path = "rule_graph" }
sharded_lmdb = { path = "sharded_lmdb" }
smallvec = "0.6"
stdio = { path = "stdio" }
store = { path = "fs/store" }
task_executor = { path = "task_executor" }
tempfile = "3"
testutil_mock = { package = "mock", path = "testutil/mock" }
time = "0.1.40"
tokio = { version = "0.2.23", features = ["macros", "rt-threaded"] }
tryfuture = { path = "tryfuture" }
ui = { path = "ui" }
url = "2.1"
uuid = { version = "0.7", features = ["v4"] }
watch = { path = "watch" }
workunit_store = { path = "workunit_store" }

[dev-dependencies]
testutil = { path = "./testutil" }
fs = { path = "./fs" }
env_logger = "0.5.4"

[patch.crates-io]
# Patch all transitive uses of Prost to refer to the version with `Bytes` support.
# Specifically, this Prost commit: https://github.com/danburkert/prost/commit/a1cccbcee343e2c444e1cd2738c7fba2599fc391
prost = { git = "https://github.com/danburkert/prost", rev = "a1cccbcee343e2c444e1cd2738c7fba2599fc391" }
prost-build = { git = "https://github.com/danburkert/prost",  rev = "a1cccbcee343e2c444e1cd2738c7fba2599fc391" }
prost-types = { git = "https://github.com/danburkert/prost",  rev = "a1cccbcee343e2c444e1cd2738c7fba2599fc391" }
# TODO: Posted as https://github.com/mitsuhiko/console/pull/93.
console = { git = "https://github.com/pantsbuild/console", rev = "b6e9aa7ce734517691934d558d79a459609633db" }
